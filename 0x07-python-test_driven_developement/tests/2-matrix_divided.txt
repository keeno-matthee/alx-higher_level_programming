==============================================
The ``2-matrix_divided`` module
==============================================

Using `matrix_divided`
=====================

Import the function:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now test it:

    >>> matrix_divided([[4, 6], [8, 10]], 2)
    [[2.0, 3.0], [4.0, 5.0]]

    >>> matrix_divided([[1.0, 5.0], [-2, 7]], 2)
    [[0.5, 2.5], [-1.0, 3.5]]

    >>> matrix_divided([[2, "alx"], [3, 8]], 67)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[2, 6, 5], [3, 8]], 67)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[2, 607], [19, 8]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[2, 5], [None, None]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[2, 3, 4], [4, 5, 6]], "alx")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided("Hello", 9)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
